version: '2'
services:
  jiva-w:
    image: jivagestaoempresarial/snk-jiva-w:1.4
    restart: always
    environment:
      - IP_BD_JIVAW=${ip_bd}
      - PORTA_BD_JIVAW=${porta_bd}
      - SID_BD_JIVAW=${sid_bd}
      - USUARIO_BD_JIVAW=${usuario_bd}
      - SENHA_BD_JIVAW=${senha_bd}
      - PACOTE_JIVAW=${pacote_jivaw}
      - TIPO_SERVIDOR=WILDFLY
      - TIPO_BD=${tp_bd}
      - MEMORIA_JBOSS=${memoria_jboss}
      - CLIENTE={{ .Stack.Name }}
    links:
      - sas
    volumes: 
      - /home/mgeweb/compartilhado/clientes/{{ .Stack.Name }}/repositorio/:/home/mgeweb/repositorio # Repositório de arquivos
      - /home/mgeweb/compartilhado/clientes/{{ .Stack.Name }}/logs/:/home/mgeweb/wildfly_producao/standalone/log # logs do JBOSS
      - /home/mgeweb/compartilhado/clientes/{{ .Stack.Name }}/SanNFe/:/home/mgeweb/SanNFe # Certificados do SanNFe
      - /home/mgeweb/compartilhado/pacotes/sannfe:/home/mgeweb/pacotes-sannfe/  # Pacotes do SanNFe
      - /home/mgeweb/compartilhado/pacotes/jivaw:/home/mgeweb/sankhyaw-dpm/pkgs # Pkgs Jiva-W
    command: ["/bin/sh","-c", "sudo chown -R mgeweb:mgeweb /home/mgeweb/sankhyaw-dpm/ /home/mgeweb/repositorio /home/mgeweb/pacotes-sannfe/ && /home/mgeweb/DPM/scripts/./wildfly.sh && java -jar /home/mgeweb/DPM/docker-package-manager.jar && sleep 2 && /home/mgeweb/DPM/scripts/./sannfe.sh &&  sudo chown -R mgeweb:mgeweb /home/mgeweb/SanNFe /home/mgeweb/wildfly_producao/standalone/log  && /home/mgeweb/DPM/scripts/./visualvm.sh && sed -i 's/<min-pool-size>100</<min-pool-size>10</g' /home/mgeweb/wildfly_producao/standalone/deployments/mge-ds.xml && sed -i 's/<max-pool-size>100</<max-pool-size>50</g' /home/mgeweb/wildfly_producao/standalone/deployments/mge-ds.xml &&  sleep 2 && /home/mgeweb/wildfly_producao/bin/./standalone.sh -Djape.lazy.init=true -Djape.lob.fields.as.lazy=true -Djape.ignore.ligacao.inconsistente=true"]
    mem_limit: ${memory_container}m 
    mem_reservation: 1024m
    mem_swappiness: 10 # Irá usar o swap apenas quando tiver 10% de mem disponível
    drain_timeout_ms: 10000
    health_check:
        port: 8080
        request_line: GET / HTTP/1.0
        interval: 90000
        initializing_timeout: 300000
        reinitializing_timeout: 300000
        unhealthy_threshold: 3
        strategy: recreate
        healthy_threshold: 1
        response_timeout: 60000

  sas:
    image: jivagestaoempresarial/sas:1.4
    restart: always
    environment:
      - IP_BD_JIVAW=${ip_bd}
      - PORTA_BD_JIVAW=${porta_bd}
      - SID_BD_JIVAW=${sid_bd}
      - USUARIO_BD_JIVAW=${usuario_bd}
      - SENHA_BD_JIVAW=${senha_bd}
      - HASDELPHI=${sas_delphi}
      - TIPO_BD=${tp_bd}
    volumes: 
      - /home/mgeweb/compartilhado/pacotes/sas:/home/mgeweb/pacotes-sas/  # Pacotes do SAS
      - /home/mgeweb/compartilhado/clientes/{{ .Stack.Name }}/SAS/:/opt/SAS/licenca # Licenca do SAS
    command: ["/bin/sh","-c", "sudo chown -R mgeweb:mgeweb  /home/mgeweb/pacotes-sas/ /tmp/ && java -jar /opt/DSM/docker-sas-manager.jar /SAS  && tar -xzf /tmp/SAS.tar.gz -C /tmp/ &&  sudo chown -R mgeweb:mgeweb /tmp/ /opt/SAS/* && sleep 2  && /opt/DSM/scripts/./run-sas.sh && sleep 2 && tail -f /opt/SAS/log/server*.log"]
    mem_reservation: 100m
    health_check:
      response_timeout: 60000
      healthy_threshold: 1
      port: 10050
      unhealthy_threshold: 2
      initializing_timeout: 60000
      interval: 60000
      strategy: recreate
      reinitializing_timeout: 60000

  {{- if eq .Values.data_sync "true"}}
  datasync:
    image: jivagestaoempresarial/datasync:1.4
    restart: always
    volumes: 
      - /home/mgeweb/compartilhado/clientes/{{ .Stack.Name }}/datasync/conf:/home/mgeweb/DataSync/conf
      - /home/mgeweb/compartilhado/clientes/{{ .Stack.Name }}/datasync/email:/home/mgeweb/DataSync/email
      - /home/mgeweb/compartilhado/clientes/{{ .Stack.Name }}/datasync/exported:/home/mgeweb/DataSync/exported
      - /home/mgeweb/compartilhado/clientes/{{ .Stack.Name }}/datasync/filetransfer_home:/home/mgeweb/DataSync/filetransfer_home
      - /home/mgeweb/compartilhado/clientes/{{ .Stack.Name }}/datasync/log:/home/mgeweb/DataSync/log
      - /home/mgeweb/compartilhado/clientes/{{ .Stack.Name }}/datasync/processed:/home/mgeweb/DataSync/processed
      - /home/mgeweb/compartilhado/clientes/{{ .Stack.Name }}/datasync/sync:/home/mgeweb/DataSync/sync
      - /home/mgeweb/compartilhado/clientes/{{ .Stack.Name }}/datasync/tracking:/home/mgeweb/DataSync/tracking
      - /home/mgeweb/compartilhado/clientes/{{ .Stack.Name }}/datasync/work:/home/mgeweb/DataSync/work
      - /home/mgeweb/compartilhado/pacotes/datasync:/home/mgeweb/pacotes-datasync/  # Pacotes do Data Sync
    command: ["/bin/sh","-c", "sudo chown -R mgeweb:mgeweb /home/mgeweb/pacotes-datasync/ && java -jar /home/mgeweb/DDM/docker-datasync-manager.jar  && sudo chown -R mgeweb:mgeweb /home/mgeweb/DataSync/ && /home/mgeweb/DDM/scripts/./run-datasync.sh && /home/mgeweb/DataSync/./datasync-service start && sleep 3 && tail -f /home/mgeweb/DataSync/log/server.log"]
    mem_reservation: 512m
  {{- end}}

  {{- if eq .Values.e_social "true"}}
  sanesocial:
    image: jivagestaoempresarial/esocial:1.4
    restart: always
    volumes:
      - /home/mgeweb/compartilhado/clientes/{{ .Stack.Name }}/sanesocial/conf:/home/mgeweb/sanesocial/conf
      - /home/mgeweb/compartilhado/clientes/{{ .Stack.Name }}/sanesocial/certificados:/home/mgeweb/sanesocial/certificados
      - /home/mgeweb/compartilhado/clientes/{{ .Stack.Name }}/sanesocial/log:/home/mgeweb/sanesocial/log
      - /home/mgeweb/compartilhado/clientes/{{ .Stack.Name }}/sanesocial/properties:/home/mgeweb/sanesocial/properties
    command: ["/bin/sh","-c", "java -jar /home/mgeweb/DSEM/docker-sanesocial-manager.jar && /home/mgeweb/DSEM/scripts/./run-sanesocial.sh && /home/mgeweb/sanesocial/./sanesocial-service start && sleep 3 && tail -f /home/mgeweb/sanesocial/log/server.log"]
    mem_reservation: 512m
  {{- end}}
